{"version":3,"sources":["Status.js","GiftModal.js","App.js","serviceWorker.js","index.js"],"names":["Status","state","open","handleClose","event","reason","_this","setState","this","props","classes","react_default","a","createElement","Snackbar_default","anchorOrigin","vertical","horizontal","autoHideDuration","onClose","ContentProps","aria-describedby","message","id","action","IconButton_default","key","aria-label","color","className","close","onClick","Close_default","React","Component","withStyles","theme","padding","spacing","unit","GiftModal","success","input","handleClickOpen","handleChange","evt","target","value","handleSave","_this$props","firestore","user","collection","doc","update","requestedGift","then","Button_default","size","Dialog_default","aria-labelledby","DialogTitle_default","DialogContent_default","DialogContentText_default","TextField_default","autoFocus","margin","label","type","fullWidth","onChange","DialogActions_default","src_Status","withFirestore","getUser","data","window","location","href","split","_params$user","length","map","param","Object","defineProperty","reduce","obj","objectSpread","randomFriend","get","querySnapshot","users","forEach","push","max","alreadyTaken","filter","_ref2","undefined","friend","_ref3","path","replace","available","_ref4","indexOf","randomUser","Math","floor","random","userRef","friendRef","console","error","catch","log","root","flexGrow","loading","width","height","display","alignItems","justifyContent","appBar","backgroundColor","card","media","listRoot","maxWidth","palette","background","paper","paperRoot","mixins","gutters","paddingTop","paddingBottom","avatarWaiting","avatarDone","_ref5","AppBar_default","position","Toolbar_default","Typography_default","variant","Card_default","react_firestore_esm","concat","render","_ref6","isLoading","react_loading_default","CardActionArea_default","CardMedia_default","image","title","CardContent_default","gutterBottom","component","name","_ref7","CardActions_default","src_GiftModal","sort","_ref8","Paper_default","elevation","List_default","_ref9","ListItem_default","Avatar_default","Alarm_default","Done_default","ListItemText_default","primary","secondary","isLocalhost","Boolean","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","onUpdate","onSuccess","firebase","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","ReactDOM","useTimestampsInSnapshots","src_App","document","getElementById","URL","process","origin","addEventListener","fetch","response","contentType","headers","status","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.b23f6181.chunk.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport { withStyles } from '@material-ui/core/styles';\nimport Snackbar from '@material-ui/core/Snackbar';\nimport IconButton from '@material-ui/core/IconButton';\nimport CloseIcon from '@material-ui/icons/Close';\n\nconst styles = theme => ({\n  close: {\n    padding: theme.spacing.unit / 2,\n  },\n});\n\nclass Status extends React.Component {\n  state = {\n    open: false,\n  };\n\n  componentDidMount() {\n    const { open } = this.props;\n    if (open) {\n      this.setState({ open });\n    }\n  }\n\n  handleClose = (event, reason) => {\n    if (reason === 'clickaway') {\n      return;\n    }\n\n    this.setState({ open: false });\n  };\n\n  render() {\n    const { classes } = this.props;\n    return (\n      <div>\n        <Snackbar\n          anchorOrigin={{\n            vertical: 'bottom',\n            horizontal: 'left',\n          }}\n          open={this.state.open}\n          autoHideDuration={6000}\n          onClose={this.handleClose}\n          ContentProps={{\n            'aria-describedby': 'message-id',\n          }}\n          message={<span id=\"message-id\">Salvo com sucesso.</span>}\n          action={[\n            <IconButton\n              key=\"close\"\n              aria-label=\"Close\"\n              color=\"inherit\"\n              className={classes.close}\n              onClick={this.handleClose}\n            >\n              <CloseIcon />\n            </IconButton>,\n          ]}\n        />\n      </div>\n    );\n  }\n}\n\nStatus.propTypes = {\n  classes: PropTypes.object.isRequired,\n};\n\nexport default withStyles(styles)(Status);\n","import React from 'react';\nimport { withFirestore } from 'react-firestore';\nimport Button from '@material-ui/core/Button';\nimport TextField from '@material-ui/core/TextField';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport Status from \"./Status\";\n\nclass GiftModal extends React.Component {\n  state = {\n    open: false,\n    success: false,\n    input: '',\n  };\n\n  handleClickOpen = () => {\n    this.setState({ open: true });\n  };\n\n  handleClose = () => {\n    this.setState({ open: false });\n  };\n\n  handleChange = (evt) => {\n    this.setState({ input: evt.target.value });\n  }\n\n  handleSave = () => {\n    const { firestore, user } = this.props;\n    const { input } = this.state;\n    const userRef = firestore.collection('users').doc(user);\n\n    userRef.update({\n      requestedGift: input,\n    }).then(() => {\n      this.setState({ open: false, success: true });\n    });\n  };\n\n  render() {\n    return (\n      <div>\n        <Button size=\"small\" color=\"primary\" onClick={this.handleClickOpen}>\n          Presente Desejado\n        </Button>\n        <Dialog\n          open={this.state.open}\n          onClose={this.handleClose}\n          aria-labelledby=\"form-dialog-title\"\n        >\n          <DialogTitle id=\"form-dialog-title\">Presente Desejado</DialogTitle>\n          <DialogContent>\n            <DialogContentText>\n              Digite a baixo qual é o presente que você deseja.\n            </DialogContentText>\n            <TextField\n              autoFocus\n              margin=\"dense\"\n              id=\"gift\"\n              label=\"Presente\"\n              type=\"text\"\n              fullWidth\n              onChange={this.handleChange}\n              value={this.state.input}\n            />\n          </DialogContent>\n          <DialogActions>\n            <Button onClick={this.handleClose} color=\"secondary\">\n              Cancelar\n            </Button>\n            <Button onClick={this.handleSave} color=\"primary\">\n              Confirmar\n            </Button>\n          </DialogActions>\n        </Dialog>\n        {this.state.success && (\n          <Status open />\n        )}\n      </div>\n    );\n  }\n}\n\nexport default withFirestore(GiftModal);\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { withStyles } from '@material-ui/core/styles';\nimport { FirestoreCollection, FirestoreDocument, withFirestore } from 'react-firestore';\nimport ReactLoading from 'react-loading';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Typography from '@material-ui/core/Typography';\nimport Card from '@material-ui/core/Card';\nimport CardActionArea from '@material-ui/core/CardActionArea';\nimport CardActions from '@material-ui/core/CardActions';\nimport CardContent from '@material-ui/core/CardContent';\nimport CardMedia from '@material-ui/core/CardMedia';\nimport Button from '@material-ui/core/Button';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport Avatar from '@material-ui/core/Avatar';\nimport AlarmIcon from '@material-ui/icons/Alarm';\nimport DoneIcon from '@material-ui/icons/Done';\nimport Paper from '@material-ui/core/Paper';\n\nimport GiftModal from './GiftModal';\n\nconst styles = theme => ({\n  root: {\n    flexGrow: 1,\n  },\n  loading: {\n    width: '100%',\n    height: '100%',\n    display: 'flex',\n    alignItems: 'center',\n    justifyContent: 'center',\n  },\n  appBar: {\n    backgroundColor: '#7e57c2',\n    alignItems: 'center',\n    justifyContent: 'center',\n  },\n  card: {\n    margin: '12px 15px',\n  },\n  media: {\n    height: 180,\n  },\n  listRoot: {\n    width: '100%',\n    maxWidth: 360,\n    backgroundColor: theme.palette.background.paper,\n  },\n  paperRoot: {\n    ...theme.mixins.gutters(),\n    paddingTop: theme.spacing.unit * 2,\n    paddingBottom: theme.spacing.unit * 2,\n    margin: '12px 15px',\n  },\n  avatarWaiting: {\n    backgroundColor: '#fff176',\n    color: '#202020',\n  },\n  avatarDone: {\n    backgroundColor: '#aed581',\n    color: '#202020',\n  },\n});\n\nconst getUser = () => {\n  const { href } = window.location;\n  const data = href.split('?');\n  const query = data[data.length - 1];\n  const params = query.split('&')\n    .map(param => ({ [param.split('=')[0]]: param.split('=')[1] }))\n    .reduce((obj, param) => ({ ...obj, ...param }), {});\n  const { user = 'null' } = params;\n\n  return user;\n};\n\nconst randomNum = max => Math.floor(Math.random() * max);\n\nconst randomFriend = (firestore, user) => () => {\n  firestore.collection('users').get()\n    .then((querySnapshot) => {\n      const users = [];\n      querySnapshot.forEach((doc) => {\n        if (doc.id !== user) {\n          users.push({ id: doc.id, ...doc.data() });\n        }\n      });\n\n      const alreadyTaken = users\n        .filter(({ friend }) => friend !== undefined)\n        .map(({ friend }) => friend.path.replace('users/', ''));\n\n      const available = users.filter(({ id }) => alreadyTaken.indexOf(id) === -1);\n      if (available.length > 0) {\n        const randomUser = available[randomNum(available.length)];\n\n        const userRef = firestore.collection('users').doc(user);\n        const friendRef = firestore.collection('users').doc(randomUser.id);\n\n        userRef.update({\n          friend: friendRef,\n        });\n      } else {\n        console.error('Vish mano, deu ruim nos usuários disponiveis.');\n      }\n    })\n    .catch((error) => {\n      console.log(\"Error getting documents: \", error);\n    });\n};\n\nconst App = ({ classes, firestore }) => (\n  <div className={classes.root}>\n    <AppBar position=\"static\" color=\"primary\" className={classes.appBar}>\n      <Toolbar>\n        <Typography variant=\"h6\" color=\"inherit\">\n          Amigo Secreto\n        </Typography>\n      </Toolbar>\n    </AppBar>\n    <Card className={classes.card}>\n      <FirestoreDocument\n        path={`users/${getUser()}`}\n        render={({ isLoading, data }) => {\n          return isLoading ? (\n            <div className={classes.loading}>\n              <ReactLoading type=\"bars\" color=\"#000\" height=\"30%\" width=\"30%\"  />\n            </div>\n          ) : (\n            <div>\n              <CardActionArea>\n                <CardMedia\n                  className={classes.media}\n                  image=\"https://www.topgallant-partners.com/wp-content/uploads/2012/05/stormtrooper.jpg\"\n                  title=\"Avatar\"\n                />\n                  <CardContent>\n                    <Typography gutterBottom variant=\"h5\" component=\"h2\">\n                      {data.name || 'Invalid User'}\n                    </Typography>\n                    <Typography variant=\"subtitle1\" color=\"textSecondary\">\n                      {data.requestedGift === undefined || data.requestedGift.length === 0\n                        ? 'Ainda não escolheu o que deseja receber.'\n                        : `Deseja receber ${data.requestedGift}.`\n                      }\n                    </Typography>\n                    {data.friend && (\n                      <FirestoreDocument\n                        path={data.friend.path}\n                        render={({ isLoading, data }) => {\n                          return isLoading ? (\n                            <div className={classes.loading}>\n                              <ReactLoading type=\"dots\" color=\"#000\" height=\"30%\" width=\"30%\"  />\n                            </div>\n                          ) : (\n                            <Typography variant=\"subtitle1\" color=\"textSecondary\">\n                              Tirou {data.name} no sorteio, {data.name} {data.requestedGift === undefined || data.requestedGift.length === 0 ? 'ainda não escolheu o que receber.' : `deseja receber ${data.requestedGift}.`}.\n                            </Typography>\n                          )}}\n                      />\n                    )}\n                </CardContent>\n              </CardActionArea>\n              {data.name !== undefined && (\n                <CardActions>\n                  <GiftModal user={getUser()} />\n                  {data.friend === undefined && (\n                    <Button size=\"small\" color=\"secondary\" onClick={randomFriend(firestore, getUser())}>\n                      Sortear Amigo\n                    </Button>\n                  )}\n                </CardActions>\n              )}\n            </div>\n          );\n        }}\n      />\n    </Card>\n    <FirestoreCollection\n      path=\"users\"\n      sort=\"name\"\n      render={({ isLoading, data }) => {\n        return isLoading ? (\n          <div className={classes.loading}>\n            <ReactLoading type=\"bars\" color=\"#000\" height=\"30%\" width=\"30%\"  />\n          </div>\n        ) : (\n          <Paper className={classes.paperRoot} elevation={1}>\n            <Typography variant=\"h5\" component=\"h3\">\n              Lista de Participantes\n            </Typography>\n            <List className={classes.listRoot}>\n              {data.map(({ id, name, requestedGift, friend }) => (\n                <ListItem key={id}>\n                  {friend === undefined\n                    ? (<Avatar className={classes.avatarWaiting}><AlarmIcon /></Avatar>)\n                    : (<Avatar className={classes.avatarDone}><DoneIcon /></Avatar>)}\n                  <ListItemText primary={name} secondary={requestedGift} />\n                </ListItem>\n              ))}\n            </List>\n          </Paper>\n        );\n      }}\n    />\n  </div>\n);\n\nApp.propTypes = {\n  classes: PropTypes.object.isRequired,\n};\n\nexport default withFirestore(withStyles(styles)(App));\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport firebase from 'firebase/app';\nimport 'firebase/firestore';\nimport { FirestoreProvider } from 'react-firestore';\n\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nconst config = {\n  apiKey: 'AIzaSyCnt_hFF7wwAz8iEM8maeuSsVFKCqix6Ng',\n  authDomain: 'amigo-secreto-bbe75.firebaseapp.com',\n  databaseURL: 'https://amigo-secreto-bbe75.firebaseio.com',\n  projectId: 'amigo-secreto-bbe75',\n  storageBucket: 'amigo-secreto-bbe75.appspot.com',\n  messagingSenderId: '569745142440',\n};\n\nfirebase.initializeApp(config);\n\nReactDOM.render(\n  <FirestoreProvider firebase={firebase} useTimestampsInSnapshots>\n    <App />\n  </FirestoreProvider>,\n  document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.register();\n"],"sourceRoot":""}